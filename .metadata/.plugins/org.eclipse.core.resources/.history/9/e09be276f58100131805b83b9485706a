package org.jmedikit.lib.core;

import java.util.List;

import org.jmedikit.lib.image.AImage;
import org.jmedikit.lib.util.SimpleImageFactory;

public abstract class APlugIn3D extends APlugIn{

	public abstract List<AImage> process(List<AImage> images, int index);
	
	@Override
	protected List<AImage> run(List<AImage> images, int index) {

		AImage sample = SimpleImageFactory.getAbstractImage(images.get(index).getImageType(), images.get(index).getWidth(), images.get(index).getWidth());
		
		int x = sample.getWidth();
		int y = sample.getHeight();
		int z = images.size();
		
		List<AImage> processed = process(images, index);
		
		if(processed.size() != z){
			try {
				throw new IllegalAccessException("RESULT SIZE DOES NOT MATCH CLAIM SIZE");
			} catch (IllegalAccessException e) {
				e.printStackTrace();
			}
		}
		else{
			for(int i = 0; i < processed.size(); i++){
				AImage copy = processed.get(i);
				if(x == copy.getWidth() && y == copy.getHeight()){
					copyValues(copy, sample);
				}
				else{
					try {
						throw new IllegalAccessException("IMAGE DIMENSION DOES NOT MATCH SOURCE DIMENSION");
					} catch (IllegalAccessException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
				}
				
			}
		}
		
		return processed;
	}

}
