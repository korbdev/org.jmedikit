package org.jmedikit;

import java.beans.IntrospectionException;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.io.Reader;
import java.io.StringWriter;
import java.io.Writer;
import java.lang.reflect.Method;
import java.net.URL;
import java.net.URLClassLoader;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.tools.DiagnosticCollector;
import javax.tools.DiagnosticListener;
import javax.tools.JavaCompiler;
import javax.tools.JavaFileManager;
import javax.tools.JavaFileObject;
import javax.tools.StandardJavaFileManager;
import javax.tools.ToolProvider;

import org.eclipse.core.runtime.FileLocator;
import org.jmedikit.lib.io.JavaFileFromString;
import org.osgi.framework.BundleActivator;
import org.osgi.framework.BundleContext;

public class Activator implements BundleActivator{

	private static BundleContext context;

	static BundleContext getContext() {
		return context;
	}

	/*
	 * (non-Javadoc)
	 * @see org.osgi.framework.BundleActivator#start(org.osgi.framework.BundleContext)
	 */
	public void start(BundleContext bundleContext) throws Exception {
		Activator.context = bundleContext;
		System.out.println("ORG.JMEDIKIT.PLUGIN STARTUP");
		
		File f = new File("C:\\Users\\rkorb\\Desktop\\plugins\\Testplugin\\bin\\");
		System.out.println(f.getAbsolutePath()+", "+f.getPath()+", "+System.getProperty("user.dir"));
		//JavaCompiler compiler = ToolProvider.getSystemJavaCompiler();
		// Convert File to a URL
	    URL url = new URL("file://"+f.getPath());          // file:/c:/myclasses/
	    System.out.println(url.getPath());
	    url = f.toURI().toURL();       // file:/c:/myclasses/
	    System.out.println(url.getPath());
	    URL[] urls = new URL[]{url};
		
	    URLClassLoader loader = new URLClassLoader(urls, this.getClass().getClassLoader());
	    Class<?> c;
		String test ="test";
		try {
			c = loader.loadClass("JmkPlgn");
			try {
				Object o = c.newInstance();
				System.out.println(o.getClass().getName());
				Method m = o.getClass().getMethod("print", null);
				m.invoke(o, null);
			} catch (InstantiationException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (IllegalAccessException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		} catch (ClassNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	   /* File[] javaFiles = new File[]{f};  
	      
	      
	    DiagnosticCollector<JavaFileObject> diagnostics = new DiagnosticCollector<JavaFileObject>();  
	    StandardJavaFileManager fileManager = compiler.getStandardFileManager(diagnostics, null, null);  
	      
	    Iterable<? extends JavaFileObject> compilationUnits = fileManager.getJavaFileObjectsFromFiles(Arrays.asList(javaFiles));  
	      
	    List<String> optionList = new ArrayList<String>();  
	    optionList.addAll(Arrays.asList("-classpath", "C:\\Users\\rkorb\\Desktop\\jmedikit\\jmedikit\\plugins\\org.jmedikit.plugin_1.0.0.201312212324.jar"));  
	    JavaCompiler.CompilationTask task = compiler.getTask(null, fileManager, diagnostics, optionList, null, compilationUnits);  
	    System.out.println(task.call());*/
	    //compiler.run(null, null, null, javaFiles[0].getPath());
	}

	/*
	 * (non-Javadoc)
	 * @see org.osgi.framework.BundleActivator#stop(org.osgi.framework.BundleContext)
	 */
	public void stop(BundleContext bundleContext) throws Exception {
		Activator.context = null;
	}
	
	public static void addURLToSystemClassLoader(URL url) throws IntrospectionException { 
		  URLClassLoader systemClassLoader = (URLClassLoader) ClassLoader.getSystemClassLoader(); 
		  Class<URLClassLoader> classLoaderClass = URLClassLoader.class; 
		  
		  try { 
		    Method method = classLoaderClass.getDeclaredMethod("addURL", new Class[]{URL.class}); 
		    method.setAccessible(true); 
		    method.invoke(systemClassLoader, new Object[]{url}); 
		  } catch (Throwable t) { 
		    t.printStackTrace(); 
		    throw new IntrospectionException("Error when adding url to system ClassLoader "); 
		  } 
		}

}
