package org.jmedikit.plugin.gui;

import org.eclipse.core.runtime.IProgressMonitor;
import org.eclipse.e4.core.services.events.IEventBroker;
import org.eclipse.e4.ui.di.UISynchronize;
import org.eclipse.jface.dialogs.Dialog;
import org.eclipse.jface.dialogs.ProgressMonitorDialog;
import org.eclipse.swt.SWT;
import org.eclipse.swt.layout.GridData;
import org.eclipse.swt.layout.GridLayout;
import org.eclipse.swt.widgets.Composite;
import org.eclipse.swt.widgets.Control;
import org.eclipse.swt.widgets.ProgressBar;
import org.eclipse.swt.widgets.Shell;
import org.jmedikit.plugin.gui.events.EventConstants;

public class ImageLoaderDialog extends ProgressMonitorDialog implements IProgressMonitor{

	private UISynchronize sync;
	
	private IEventBroker broker;
	
	private ProgressBar bar;
	
	protected ImageLoaderDialog(Shell parentShell, UISynchronize sync, IEventBroker broker) {
		super(parentShell);
		this.sync = sync;
		this.broker = broker;
	}

	
	@Override
	protected Control createDialogArea(Composite parent) {
		Composite container = (Composite) super.createDialogArea(parent);
		container.setLayout(new GridLayout(1, false));
		
		GridData barData = new GridData(SWT.FILL, SWT.FILL, true, true, 0, 0);
		bar = new ProgressBar(container, SWT.SMOOTH);
		bar.setLayoutData(barData);
		return container;
	}

	@Override
	protected void createButtonsForButtonBar(Composite parent){
		
	}

	@Override
	public void beginTask(final String name, final int totalWork) {
		sync.syncExec(new Runnable() {
			
			@Override
			public void run() {
				ImageLoaderDialog.this.open();
				System.out.println("beginTask");
				//bar.setMaximum(totalWork);
				//bar.setToolTipText(name);
				
			}
		});
	}


	@Override
	public void done() {
		sync.syncExec(new Runnable() {
			
			@Override
			public void run() {
				bar.setSelection(0);
				broker.send(EventConstants.IMAGES_LOADED, true);
				ImageLoaderDialog.this.close();
			}
		});
	}


	@Override
	public void internalWorked(double work) {
		// TODO Auto-generated method stub
		
	}


	@Override
	public boolean isCanceled() {
		// TODO Auto-generated method stub
		return false;
	}


	@Override
	public void setCanceled(boolean value) {
		// TODO Auto-generated method stub
		
	}


	@Override
	public void setTaskName(String name) {
		// TODO Auto-generated method stub
		
	}


	@Override
	public void subTask(String name) {
		// TODO Auto-generated method stub
		
	}


	@Override
	public void worked(final int work) {
		sync.syncExec(new Runnable() {
			@Override
			public void run() {
				int val = ImageLoaderDialog.this.bar.getSelection();
				System.out.println(val+", "+work);
				ImageLoaderDialog.this.bar.setSelection(val+work);
			}
		});
	}
}
