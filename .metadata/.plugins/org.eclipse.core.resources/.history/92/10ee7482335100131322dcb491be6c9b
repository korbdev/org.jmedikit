 
package org.jmedikit.plugin.gui.handlers;

import java.io.IOException;

import javax.inject.Inject;
import javax.inject.Named;

import org.eclipse.core.runtime.preferences.ConfigurationScope;
import org.eclipse.core.runtime.preferences.IEclipsePreferences;
import org.eclipse.e4.core.di.annotations.Execute;
import org.eclipse.e4.core.di.extensions.Preference;
import org.eclipse.e4.tools.services.IResourcePool;
import org.eclipse.e4.ui.model.application.MApplication;
import org.eclipse.e4.ui.services.IServiceConstants;
import org.eclipse.jface.preference.IPreferenceNode;
import org.eclipse.jface.preference.PreferenceDialog;
import org.eclipse.jface.preference.PreferenceManager;
import org.eclipse.jface.preference.PreferenceNode;
import org.eclipse.jface.preference.PreferenceStore;
import org.eclipse.jface.resource.ImageDescriptor;
import org.eclipse.swt.graphics.Image;
import org.eclipse.swt.widgets.Shell;
import org.eclipse.ui.preferences.ScopedPreferenceStore;
import org.jmedikit.lib.util.ImageProvider;
import org.jmedikit.plugin.gui.PlugInPreferences;



public class SettingsHandler {
	
	//@Inject
	//ICommandService commandService;
	
	@Inject
	@Preference
	IEclipsePreferences preferences;

	@Inject
	MApplication application;
	
	@Inject @Named(IServiceConstants.ACTIVE_SHELL) 
	protected Shell shell;
	
	@Inject
	protected
	IResourcePool imagePool;
	
	@Execute 
	public void execute(){ 
		PreferenceManager pm = new PreferenceManager();
		Image img = imagePool.getImageUnchecked(ImageProvider.CLOSE_LIGHT_BUTTON);
		//pm.addToRoot(new PreferenceNode("Plugin", new PlugInPreferences()));
		IPreferenceNode node = new PreferenceNode("id", new PlugInPreferences());
		pm.addToRoot(node);
		pm.addTo("id", new PreferenceNode("test", new PlugInPreferences()));
		
		PreferenceDialog dialog = new PreferenceDialog(shell, pm);
		PreferenceStore ps = new PreferenceStore("C:\\Users\\rkorb\\master_thesis\\source\\org.jmedikit.plugin\\preferences\\prefs.properties");
		try {
			ps.load();
		} catch (IOException e) {
			System.out.println("Could not load");
			e.printStackTrace();
		}
		dialog.setPreferenceStore(new ScopedPreferenceStore(new ConfigurationScope.INSTANCE, "org.jmedikit.plugin"));

		dialog.open();
	} 	
}