package org.jmedikit.lib.util;

import org.eclipse.swt.graphics.GC;
import org.eclipse.swt.graphics.Image;
import org.eclipse.swt.graphics.ImageData;
import org.eclipse.swt.widgets.Canvas;
import org.eclipse.swt.widgets.Composite;
import org.jmedikit.lib.core.BilinearInterpolation;
import org.jmedikit.lib.core.DicomTreeItem;
import org.jmedikit.lib.core.ImageWindowInterpolation;
import org.jmedikit.lib.image.AbstractImage;

public class ResizeTool extends AbstractTool{

	public ResizeTool(Composite parent, DicomTreeItem selection) {
		super(parent, selection);
	}

	@Override
	public GC paint(GC buffer) {
		System.out.println("RESIZEME");
		BilinearInterpolation scale = new BilinearInterpolation(getSourceImage());
		AbstractImage resampled = scale.resampleROI(getRoi(), getSourceImage().getWidth(), getSourceImage().getHeight(), getScaledImageDimension().x, getScaledImageDimension().y);
		
		ImageData data = ImageWindowInterpolation.interpolateImage(resampled, getWindowDimension().x, getWindowDimension().y, 0, 255);
		Image iimg = new Image(getCanvas().getDisplay(), data);
		//buffer.drawImage(iimg, getImageCoordinates().x+(int)(getRoi().x*getScaledImageDimension().x), getImageCoordinates().y+(int)(getRoi().y*getScaledImageDimension().y));
		buffer.drawImage(iimg, getCanvasCenter().x-getScaledImageDimension().x, getCanvasCenter().y-getScaledImageDimension().y);
		return buffer;
	}

}
