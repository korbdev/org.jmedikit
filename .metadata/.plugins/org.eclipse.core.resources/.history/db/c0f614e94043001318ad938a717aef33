package org.jmedikit.lib.core;

import org.jmedikit.lib.image.AbstractImage;
import org.jmedikit.lib.util.SimpleImageFactory;

public class BilinearInterpolation {
	
	private AbstractImage img;
	
	public BilinearInterpolation(AbstractImage src){
		img = src;
	}
	
	public AbstractImage resample(AbstractImage img, int newWidth, int newHeight){
		
		int width = img.getWidth();
		int height = img.getHeight();
		
		AbstractImage resampled = SimpleImageFactory.getAbstractImage(img.getImageType(), newWidth, newHeight);
		
		float xAspectRatio = (float)newWidth/(float)width;
		float yAspectRatio = (float)newHeight/(float)height;
		
		float x_index;
		float y_index;
		
		//System.out.println("XAR "+xAspectRatio+", YAR "+yAspectRatio + ", "+X+" "+Y);
		
		for(int y = 0; y < newHeight; y++){
			for(int x = 0; x < newWidth; x++){
				x_index = x * xAspectRatio;
				y_index = y * yAspectRatio;
				int value = (int)(getInterpolatedPixel(x_index, y_index)+0.5);
				System.out.println(value);
			}
		}
		return resampled;
	}
	
	private float getInterpolatedPixel(float x, float y){
		System.out.println(img.getPixel(320, 320));
		return 0f;
	}
}
