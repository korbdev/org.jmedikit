 
package org.jmedikit.plugin.gui;

import javax.inject.Inject;
import javax.annotation.PostConstruct;

import org.eclipse.e4.core.di.annotations.Optional;
import org.eclipse.e4.core.services.events.IEventBroker;
import org.eclipse.e4.ui.di.UIEventTopic;
import org.eclipse.swt.SWT;
import org.eclipse.swt.layout.GridData;
import org.eclipse.swt.layout.GridLayout;
import org.eclipse.swt.widgets.Composite;
import org.eclipse.swt.widgets.Text;
import org.eclipse.swt.widgets.ToolBar;
import org.eclipse.swt.widgets.ToolItem;
import org.jmedikit.lib.core.ADicomTreeItem;
import org.jmedikit.plugin.gui.events.EventConstants;

public class ConsoleView {
	
	
	@Inject
	IEventBroker broker;
	
	Text errorMsg;
	
	@Inject
	public ConsoleView() {
		//TODO Your code here
	}
	
	@PostConstruct
	public void createGUI(Composite parent) {
		Composite container = new Composite(parent, SWT.NONE);
		container.setLayout(new GridLayout(1, true));
		container.setLayoutData(new GridData(GridData.FILL_BOTH));
		
		ToolBar tools = new ToolBar(container, SWT.HORIZONTAL);
		tools.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));
		
		ToolItem clear = new ToolItem(tools, SWT.NONE);
		
		errorMsg = new Text(container, SWT.MULTI | SWT.V_SCROLL);
		errorMsg.setLayoutData(new GridData(GridData.FILL_BOTH));
	}

	@Inject
	@Optional
	public void getNotifiedDicomTreeSelection(@UIEventTopic(EventConstants.PLUG_IN_ERROR) String error){
		errorMsg.setText(error);
	}
	
	
	
}